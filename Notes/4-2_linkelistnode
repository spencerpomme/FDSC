/* C Implementation of Linked List ADT */
/* code list 4.2 on page 90 to 93 */
#include <stdio.h>
#include <stdlib.h>
#define VAL 10;

struct Node {
	int data;
	struct Node *next;
};

typedef struct Node *Linked;

Linked create2(void)
{
	/* create linked list with two nodes */
	Linked head = (Linked)malloc(sizeof(struct Node));
	Linked tail = (Linked)malloc(sizeof(struct Node));
	head->data = 1;
	head->next = tail;
	tail->data = 2;
	tail->next = NULL;
	return head;
}

void InsertA(Linket *ptr, Linked node)
{
	/* insert after node if list is not empty */
	Linked temp = (Linked)malloc(sizeof(struct Node));
	temp->data = VAL;
	if (*ptr)
	{
		temp->next = node->next;
		node->next = temp;
	}
	else
	{
		temp->next = NULL;
		*ptr = temp;
	}
}

void InsertB(Linked list, struct Node target, struct Node innode)
{
	/* A function that insert node 'innode' after node 'target'
	of linked list 'list'*/

}